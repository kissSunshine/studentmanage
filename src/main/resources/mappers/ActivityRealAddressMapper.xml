<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.studentmanage.dao.ActivityRealAddressMapper">

    <resultMap type="com.zh.studentmanage.pojo.ActivityRealAddress" id="ActivityRealAddressMap">
        <result property="activityid" column="activityid" jdbcType="CHAR"/>
        <result property="schoolid" column="schoolid" jdbcType="CHAR"/>
        <result property="activityaddress" column="activityAddress" jdbcType="CHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        <result property="updatedPerson" column="updated_person" jdbcType="CHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ActivityRealAddressMap">
        select
          activityid, schoolid, activityAddress, created_time, updated_time, updated_person
        from activity_real_address
        where activityid = #{activityid}
    </select>

    <!--查询指定行数据-->
    <select id="queryByParamLimit" resultMap="ActivityRealAddressMap">
        select
          activityid, schoolid, activityAddress, created_time, updated_time, updated_person
        from activity_real_address
        <where>
            <if test="activityRealAddress.activityid != null and activityRealAddress.activityid != ''">
                and activityid = #{activityRealAddress.activityid}
            </if>
            <if test="activityRealAddress.schoolid != null and activityRealAddress.schoolid != ''">
                and schoolid = #{activityRealAddress.schoolid}
            </if>
            <if test="activityRealAddress.activityaddress != null and activityRealAddress.activityaddress != ''">
                and activityAddress = #{activityRealAddress.activityaddress}
            </if>
            <if test="activityRealAddress.updatedPerson != null and activityRealAddress.updatedPerson != ''">
                and updated_person = #{activityRealAddress.updatedPerson}
            </if>
        </where>
        limit #{offset}, #{pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from activity_real_address
        <where>
            <if test="activityid != null and activityid != ''">
                and activityid = #{activityid}
            </if>
            <if test="schoolid != null and schoolid != ''">
                and schoolid = #{schoolid}
            </if>
            <if test="activityaddress != null and activityaddress != ''">
                and activityAddress = #{activityaddress}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
            <if test="updatedPerson != null and updatedPerson != ''">
                and updated_person = #{updatedPerson}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="activityid" useGeneratedKeys="true">
        insert into activity_real_address(activityAddress, created_time, updated_time, updated_person)
        values (#{activityaddress}, #{createdTime}, #{updatedTime}, #{updatedPerson})
    </insert>

    <insert id="insertBatch" keyProperty="activityid" useGeneratedKeys="true">
        insert into activity_real_address(activityAddress, created_time, updated_time, updated_person)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.activityaddress}, #{entity.createdTime}, #{entity.updatedTime}, #{entity.updatedPerson})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="activityid" useGeneratedKeys="true">
        insert into activity_real_address(activityAddress, created_time, updated_time, updated_person)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.activityaddress}, #{entity.createdTime}, #{entity.updatedTime}, #{entity.updatedPerson})
        </foreach>
        on duplicate key update
        activityAddress = values(activityAddress),
        created_time = values(created_time),
        updated_time = values(updated_time),
        updated_person = values(updated_person)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update activity_real_address
        <set>
            <if test="activityaddress != null and activityaddress != ''">
                activityAddress = #{activityaddress},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
            <if test="updatedPerson != null and updatedPerson != ''">
                updated_person = #{updatedPerson},
            </if>
        </set>
        where activityid = #{activityid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from activity_real_address where activityid = #{activityid}
    </delete>

    <!--通过ID批量查询数据-->
    <select id="queryByIdBatch" resultMap="ActivityRealAddressMap">
        select activityid, schoolid, activityAddress, updated_person
        from activity_real_address
        where activityid in
        <foreach collection="activityidList" item="activityid" separator=",">
            (#{activityid})
        </foreach>
    </select>

</mapper>

