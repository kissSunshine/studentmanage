<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.studentmanage.dao.ClassRealStudentMapper">

    <resultMap type="com.zh.studentmanage.pojo.ClassRealStudent" id="ClassRealStudentMap">
        <result property="id" column="id" jdbcType="CHAR"/>
        <result property="studentid" column="studentid" jdbcType="CHAR"/>
        <result property="classid" column="classid" jdbcType="CHAR"/>
        <result property="subject" column="subject" jdbcType="CHAR"/>
        <result property="week" column="week" jdbcType="CHAR"/>
        <result property="starttime" column="startTime" jdbcType="CHAR"/>
        <result property="endtime" column="endTime" jdbcType="CHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        <result property="updatedPerson" column="updated_person" jdbcType="CHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ClassRealStudentMap">
        select id,
               studentid,
               classid,
               subject,
               week,
               startTime,
               endTime,
               created_time,
               updated_time,
               updated_person
        from studentmanage.class_real_student
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ClassRealStudentMap">
        select id,
               studentid,
               classid,
               subject,
               week,
               startTime,
               endTime,
               created_time,
               updated_time,
               updated_person
        from studentmanage.class_real_student limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ClassRealStudentMap">
        select
        id, studentid, classid, subject, week, startTime, endTime, created_time, updated_time, updated_person
        from studentmanage.class_real_student
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="studentid != null and studentid != ''">
                and studentid = #{studentid}
            </if>
            <if test="classid != null and classid != ''">
                and classid = #{classid}
            </if>
            <if test="subject != null and subject != ''">
                and subject = #{subject}
            </if>
            <if test="week != null and week != ''">
                and week = #{week}
            </if>
            <if test="starttime != null">
                and startTime = #{starttime}
            </if>
            <if test="endtime != null">
                and endTime = #{endtime}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
            <if test="updatedPerson != null and updatedPerson != ''">
                and updated_person = #{updatedPerson}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into studentmanage.class_real_student(studentid, classid, subject, week, startTime, endTime,
                                                     created_time, updated_time, updated_person)
        values (#{studentid}, #{classid}, #{subject}, #{week}, #{starttime}, #{endtime}, #{createdTime}, #{updatedTime},
                #{updatedPerson})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into studentmanage.class_real_student(studentid, classid, subject, week, startTime, endTime,
        created_time, updated_time, updated_person)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentid}, #{entity.classid}, #{entity.subject}, #{entity.week}, #{entity.starttime},
            #{entity.endtime}, #{entity.createdTime}, #{entity.updatedTime}, #{entity.updatedPerson})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into studentmanage.class_real_student(studentid, classid, subject, week, startTime, endTime,
        created_time, updated_time, updated_person)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentid}, #{entity.classid}, #{entity.subject}, #{entity.week}, #{entity.starttime},
            #{entity.endtime}, #{entity.createdTime}, #{entity.updatedTime}, #{entity.updatedPerson})
        </foreach>
        on duplicate key update
        studentid = values(studentid) , classid = values(classid) , subject = values(subject) , week = values(week) ,
        startTime = values(startTime) , endTime = values(endTime) , created_time = values(created_time) , updated_time =
        values(updated_time) , updated_person = values(updated_person)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update studentmanage.class_real_student
        <set>
            <if test="studentid != null and studentid != ''">
                studentid = #{studentid},
            </if>
            <if test="classid != null and classid != ''">
                classid = #{classid},
            </if>
            <if test="subject != null and subject != ''">
                subject = #{subject},
            </if>
            <if test="week != null and week != ''">
                week = #{week},
            </if>
            <if test="starttime != null">
                startTime = #{starttime},
            </if>
            <if test="endtime != null">
                endTime = #{endtime},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
            <if test="updatedPerson != null and updatedPerson != ''">
                updated_person = #{updatedPerson},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from studentmanage.class_real_student
        where id = #{id}
    </delete>

    <!--通过班级id查询是否还有对应的老师信息-->
    <select id="haveClassStudent" resultType="java.lang.Integer">
        select count(1)
        from studentmanage.class_real_student
        where classid = #{classid}
        limit 1
    </select>

</mapper>

